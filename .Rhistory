df_path <- list.files(path = "../datasets/results/mangen", pattern = '.csv'
, full.names = TRUE)
path = "../datasets/results/mangen"
files <- list.files(path = path, pattern = "\\.csv$", full.names = TRUE)
files
path = "../datasets/results/mangen/"
files <- list.files(path = path, pattern = "\\.csv$", full.names = TRUE)
files
files <- list.files(path = results_path, pattern = ".csv", full.names = TRUE)
results_path = "../datasets/results/mangen"
files <- list.files(path = results_path, pattern = ".csv", full.names = TRUE)
files
require(readr)
require(dplyr)
results_path = "../datasets/results/mangen"
files <- list.files(path = results_path, pattern = "\\.csv$", full.names = TRUE)
files
df_list <- lapply(result_files, read_csv)
result_files <- list.files(path = results_path, pattern = "\\.csv$", full.names = TRUE)
df_list <- lapply(result_files, read_csv)
df <- do.call(rbind, df_list)
print(df)
results_path = "../data/results/mangen"
result_files <- list.files(path = results_path, pattern = "\\.csv$", full.names = TRUE)
result_files
df_list <- lapply(result_files, read_csv)
df <- do.call(rbind, df_list)
print(df)
df_list <- lapply(result_files, read_csv)
df_combined <- do.call(rbind, lapply(csv_files, function(file) {
df <- read_csv(file)
df$model_name <- tools::file_path_sans_ext(basename(file))
df
}))
csv_files <- list.files(results_path, pattern = "\\.csv$", full.names = TRUE)
df_combined <- do.call(rbind, lapply(csv_files, function(file) {
df <- read_csv(file)
df$model_name <- tools::file_path_sans_ext(basename(file))
df
}))
csv_files <- list.files(path, pattern = "\\.csv$", full.names = TRUE)
df_combined <- do.call(rbind, lapply(csv_files, function(file) {
df <- read_csv(file)
# df$model_name <- tools::file_path_sans_ext(basename(file))
# df
}))
df
csv_files
results_path = "../data/results/mangen"
list.files(results_path, pattern = "\\.csv$", full.names = TRUE)
result_files <- list.files(path = results_path, pattern = "\\.csv$", full.names = TRUE)
results_path = "../data/results/mangen"
result_files <- list.files(path = results_path, pattern = "\\.csv$", full.names = TRUE)
result_files
result_files <- list.files(path = results_path, pattern = ".csv", full.names = TRUE)
result_files
result_files <- list.files(path = results_path, pattern = ".csv", full.names = TRUE)
file_names <- list.files(path = results_path, pattern = ".csv", full.names = FALSE)
file_names
path <- "../data/stimuli"
csv_files <- list.files(path, pattern = "\\.csv$", full.names = TRUE)
df_combined <- do.call(rbind, lapply(csv_files, function(file) {
df <- read_csv(file)
df$model_name <- sub("\\.csv$", "", basename(file))  # Remove ".csv" extension
df
}))
print(df_combined)
file_names
result_files <- list.files(path = results_path, pattern = ".csv", full.names = TRUE)
file_names <- list.files(path = results_path, pattern = ".csv", full.names = FALSE)
file_names
result_files <- list.files(path = results_path, pattern = ".csv", full.names = TRUE)
file_names <- list.files(path = results_path, pattern = ".csv", full.names = FALSE)
file_names <- list.files(path = results_path, pattern = ".csv", full.names = FALSE)
file_names
df_combined <- do.call(rbind, lapply(file_names, function(file) {
file_path <- file.path(results_path, file)
df <- read_csv(file_path)
# Add a 'model_name' column by removing the '.csv' from the filename
df$model_name <- sub("\\.csv$", "", file)
df  # Return the dataframe
}))
df_combined <- do.call(rbind, lapply(file_names, function(file) {
file_path <- file.path(results_path, file)
df <- read_csv(file_path, show_col_types = FALSE)
# Add a 'model_name' column by removing the '.csv' from the filename
df$model_name <- sub("\\.csv$", "", file)
df  # Return the dataframe
}))
df_combined
cols(df_combined)
colnames(df_combined)
unique(df_combined$model_name)
df_summary <- df_combined %>%
group_by(cont_target) %>%
summarize(mean_avg_logprob = mean(avg_logprob, na.rm = TRUE))
# Create bar plot
ggplot(df_summary, aes(x = cont_target, y = mean_avg_logprob, fill = cont_target)) +
geom_bar(stat = "identity") +
theme_minimal() +
labs(title = "Mean avg_logprob by cont_target",
x = "cont_target",
y = "Mean avg_logprob") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels if needed
require(readr)
require(dplyr)
library(ggplot2)
df_summary <- df_combined %>%
group_by(cont_target) %>%
summarize(mean_avg_logprob = mean(avg_logprob, na.rm = TRUE))
# Create bar plot
ggplot(df_summary, aes(x = cont_target, y = mean_avg_logprob, fill = cont_target)) +
geom_bar(stat = "identity") +
theme_minimal() +
facet_grid(model_name) +
labs(title = "Mean avg_logprob by cont_target",
x = "cont_target",
y = "Mean avg_logprob") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels if needed
df_summary <- df_combined %>%
group_by(cont_target, model_name) %>%
summarize(mean_avg_logprob = mean(avg_logprob, na.rm = TRUE))
# Create bar plot
ggplot(df_summary, aes(x = cont_target, y = mean_avg_logprob, fill = cont_target)) +
geom_bar(stat = "identity") +
theme_minimal() +
facet_grid(model_name) +
labs(title = "Mean avg_logprob by cont_target",
x = "cont_target",
y = "Mean avg_logprob") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels if needed
df_summary <- df_combined %>%
group_by(cont_target, model_name) %>%
summarize(mean_avg_logprob = mean(avg_logprob, na.rm = TRUE))
View(df_summary)
df_summary <- df_combined %>%
group_by(cont_target, model_name) %>%
summarize(mean_avg_logprob = mean(avg_logprob, na.rm = TRUE))
# Create bar plot
ggplot(df_summary, aes(x = cont_target, y = mean_avg_logprob, fill = model_name)) +
geom_bar(stat = "identity") +
theme_minimal() +
labs(title = "Mean avg_logprob by cont_target",
x = "cont_target",
y = "Mean avg_logprob") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels if needed
p
df_summary <- df_combined %>%
group_by(cont_target, model_name) %>%
summarize(mean_avg_logprob = mean(avg_logprob, na.rm = TRUE))
df_summary <- df_combined %>%
group_by(cont_target, model_name) %>%
summarize(mean_avg_logprob = mean(avg_logprob, na.rm = TRUE),
.groups())
df_summary <- df_combined %>%
group_by(cont_target, model_name) %>%
summarize(mean_avg_logprob = mean(avg_logprob, na.rm = TRUE), .groups = "drop")
p <-
ggplot(df_summary, aes(x = cont_target, y = mean_avg_logprob, fill = model_name)) +
geom_bar(stat = "identity") +
theme_minimal() +
labs(title = "Mean avg_logprob by cont_target",
x = "cont_target",
y = "Mean avg_logprob") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
p
df_summary <- df_combined %>%
group_by(cont_target, model_name) %>%
summarize(mean_avg_logprob = mean(avg_logprob, na.rm = TRUE), .groups = "drop")
View(df_combined)
df_summary <- df_combined %>%
group_by(cont_target, cont_type, model_name) %>%
summarize(mean_avg_logprob = mean(avg_logprob, na.rm = TRUE), .groups = "drop")
p <- ggplot(df_summary, aes(x = model_name, y = mean_avg_logprob, fill = model_name)) +
geom_col() +  # Use geom_col() instead of geom_bar()
theme_minimal() +
facet_grid(~ cont_type) +  # Facet by cont_target
labs(title = "Mean avg_logprob by cont_target",
x = "model_name",
y = "Mean avg_logprob") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels
# Print the plot
print(p)
df_summary <- df_combined %>%
group_by(cont_target, cont_type, model_name) %>%
summarize(mean_avg_logprob = mean(avg_logprob, na.rm = TRUE), .groups = "drop")
# Create the plot
p <- ggplot(df_summary, aes(x = cont_target, y = mean_avg_logprob, fill = model_name)) +
geom_col() +  # Use geom_col() instead of geom_bar()
theme_minimal() +
facet_grid(~ cont_type) +  # Facet by cont_target
labs(title = "Mean avg_logprob by cont_target",
x = "model_name",
y = "Mean avg_logprob") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels
# Print the plot
print(p)
p
df_summary <- df_combined %>%
group_by(cont_target, cont_type, model_name) %>%
summarize(mean_avg_logprob = mean(avg_logprob, na.rm = TRUE), .groups = "drop")
# Create the plot
p <- ggplot(df_summary, aes(x = cont_target, y = mean_avg_logprob, fill = model_name)) +
geom_bar() +  # Use geom_col() instead of geom_bar()
theme_minimal() +
facet_grid(~ cont_type) +  # Facet by cont_target
labs(title = "Mean avg_logprob by cont_target",
x = "model_name",
y = "Mean avg_logprob") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels
# Print the plot
print(p)
p
p
str(df_summary)
df_summary <- df_combined %>%
group_by(cont_target, cont_type, model_name) %>%
summarize(mean_avg_logprob = mean(avg_logprob, na.rm = TRUE), .groups = "drop")
# Create the plot
p <- ggplot(df_summary, aes(x = cont_target, y = mean_avg_logprob, fill = model_name)) +
geom_col() +  # Use geom_col() instead of geom_bar()
theme_minimal() +
facet_grid(~ cont_type) +  # Facet by cont_target
labs(title = "Mean avg_logprob by cont_target",
x = "model_name",
y = "Mean avg_logprob") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels
# Print the plot
print(p)
p
df_summary <- df_combined %>%
group_by(cont_target, cont_type, model_name) %>%
summarize(mean_avg_logprob = mean(avg_logprob, na.rm = TRUE), .groups = "drop")
p <- ggplot(df_summary, aes(x = cont_target, y = mean_avg_logprob, fill = model_name)) +
geom_col(position = "dodge") +  # Use position dodge to avoid stacking
theme_minimal() +
facet_grid(~ cont_type) +  # Facet by cont_type
labs(title = "Mean avg_logprob by cont_target",
x = "cont_target",  # Change x-label to cont_target
y = "Mean avg_logprob")
p
df_summary <- df_combined %>%
group_by(cont_target, cont_type, model_name) %>%
summarize(mean_avg_logprob = mean(avg_logprob, na.rm = TRUE), .groups = "drop")
p <- ggplot(df_summary, aes(x = cont_target, y = mean_avg_logprob, fill = model_name)) +
geom_col(position = "dodge") +
theme_minimal() +
facet_grid(~ cont_type) +
labs(title = "Mean avg_logprob by cont_target",
x = "cont_target",
y = "Mean avg_logprob") +
scale_y_continuous(limits = c(-4.5, -4))
p
df_summary <- df_combined %>%
group_by(cont_target, cont_type, model_name) %>%
summarize(mean_avg_logprob = mean(avg_logprob, na.rm = TRUE), .groups = "drop")
p <- ggplot(df_combined, aes(x = cont_target, y = avg_logprob, fill = model_name)) +  # Use the original dataframe for the box plot
geom_boxplot(position = "dodge") +  # Create the box plot
theme_minimal() +
facet_grid(~ cont_type) +  # Facet by cont_type
labs(title = "Box Plot of avg_logprob by cont_target",
x = "cont_target",  # Change x-label to cont_target
y = "avg_logprob") +
scale_y_continuous(limits = c(-4.5, -4)
df_summary <- df_combined %>%
group_by(cont_target, cont_type, model_name) %>%
summarize(mean_avg_logprob = mean(avg_logprob, na.rm = TRUE), .groups = "drop")
p <- ggplot(df_combined, aes(x = cont_target, y = avg_logprob, fill = model_name)) +  # Use the original dataframe for the box plot
geom_boxplot(position = "dodge") +  # Create the box plot
theme_minimal() +
facet_grid(~ cont_type) +  # Facet by cont_type
labs(title = "Box Plot of avg_logprob by cont_target",
x = "cont_target",  # Change x-label to cont_target
y = "avg_logprob") +
scale_y_continuous(limits = c(-4.5, -4))
p
df_summary <- df_combined %>%
group_by(cont_target, cont_type, model_name) %>%
summarize(mean_avg_logprob = mean(avg_logprob, na.rm = TRUE), .groups = "drop")
p <- ggplot(df_combined, aes(x = cont_target, y = avg_logprob, fill = model_name)) +
geom_boxplot(position = "dodge") +
stat_boxplot(geom = "errorbar", width = 0.3, aes(ymin = ..lower.., ymax = ..upper..)) +
theme_minimal() +
facet_grid(~ cont_type) +
labs(title = "Box Plot of avg_logprob by cont_target",
x = "cont_target",
y = "avg_logprob") +
scale_y_continuous(limits = c(-4.5, -4))
print(p)
p
df_summary <- df_combined %>%
group_by(cont_target, cont_type, model_name) %>%
summarize(mean_avg_logprob = mean(avg_logprob, na.rm = TRUE), .groups = "drop")
p <- ggplot(df_combined, aes(x = cont_target, y = avg_logprob, fill = model_name)) +  # Use the original dataframe for the box plot
geom_boxplot(position = "dodge") +  # Create the box plot
theme_minimal() +
facet_grid(~ cont_type) +  # Facet by cont_type
labs(title = "Box Plot of avg_logprob by cont_target",
x = "cont_target",  # Change x-label to cont_target
y = "avg_logprob") +
scale_y_continuous(limits = c(-4.5, -4)
p
df_summary <- df_combined %>%
group_by(cont_target, cont_type, model_name) %>%
summarize(mean_avg_logprob = mean(avg_logprob, na.rm = TRUE), .groups = "drop")
p <- ggplot(df_summary, aes(x = cont_target, y = mean_avg_logprob, fill = model_name)) +
geom_col(position = "dodge") +
theme_minimal() +
facet_grid(~ cont_type) +
labs(title = "Mean avg_logprob by cont_target",
x = "cont_target",
y = "Mean avg_logprob") +
scale_y_continuous(limits = c(-4.5, -4))
p
df_summary <- df_combined %>%
group_by(cont_target, cont_type, model_name) %>%
summarize(mean_avg_logprob = mean(avg_logprob, na.rm = TRUE), .groups = "drop")
p <- ggplot(df_summary, aes(x = cont_target, y = mean_avg_logprob, fill = model_name)) +
box_plot(position = "dodge") +
theme_minimal() +
facet_grid(~ cont_type) +
labs(title = "Mean avg_logprob by cont_target",
x = "cont_target",
y = "Mean avg_logprob") +
scale_y_continuous(limits = c(-4.5, -4))
df_summary <- df_combined %>%
group_by(cont_target, cont_type, model_name) %>%
summarize(mean_avg_logprob = mean(avg_logprob, na.rm = TRUE), .groups = "drop")
p <- ggplot(df_summary, aes(x = cont_target, y = mean_avg_logprob, fill = model_name)) +
geom_boxplot(position = "dodge") +
theme_minimal() +
facet_grid(~ cont_type) +
labs(title = "Mean avg_logprob by cont_target",
x = "cont_target",
y = "Mean avg_logprob") +
scale_y_continuous(limits = c(-4.5, -4))
p
df_summary <- df_combined %>%
group_by(cont_target, cont_type, model_name) %>%
summarize(mean_avg_logprob = mean(avg_logprob, na.rm = TRUE), .groups = "drop")
p <- ggplot(df_combined, aes(x = cont_target, y = avg_logprob, fill = model_name)) +
geom_boxplot(position = "dodge") +
theme_minimal() +
facet_grid(~ cont_type) +  # Facet by cont_type
labs(title = "Box Plot of avg_logprob by cont_target",
x = "cont_target",  # Change x-label to cont_target
y = "avg_logprob") +
scale_y_continuous(limits = c(-4.5, -4))
p
df_summary <- df_combined %>%
group_by(cont_target, cont_type, model_name) %>%
summarize(mean_avg_logprob = mean(avg_logprob, na.rm = TRUE), .groups = "drop")
p <- ggplot(df_combined, aes(x = cont_target, y = avg_logprob, fill = model_name)) +
geom_boxplot(position = "dodge") +
theme_minimal() +
facet_grid(~ cont_type) +
labs(title = "Box Plot of avg_logprob by cont_target",
x = "Continuation target content",
y = "Average sequential log probabilities") +
scale_y_continuous(limits = c(-4.5, -4)) +
guides(fill = guide_legend(title = "Model name"))
p
df_summary <- df_combined %>%
group_by(cont_target, cont_type, model_name) %>%
summarize(mean_avg_logprob = mean(avg_logprob, na.rm = TRUE), .groups = "drop")
p <- ggplot(df_combined, aes(x = cont_target, y = avg_logprob, fill = model_name)) +
geom_boxplot(position = "dodge") +
theme_minimal() +
facet_grid(~ cont_type) +
labs(title = "Sequential log probabilities",
x = "Continuation target content",
y = "Average sequential log probabilities") +
scale_y_continuous(limits = c(-4.5, -4)) +
guides(fill = guide_legend(title = "Model name"))
p
require(readr)
require(dplyr)
require(ggplot2)
require(RColorBrewer)
df_summary <- df_combined %>%
group_by(cont_target, cont_type, model_name) %>%
summarize(mean_avg_logprob = mean(avg_logprob, na.rm = TRUE), .groups = "drop")
p <- ggplot(df_combined, aes(x = cont_target, y = avg_logprob, fill = model_name)) +
geom_boxplot(position = "dodge") +
theme_minimal() +
facet_grid(~ cont_type) +
labs(title = "Sequential log probabilities",
x = "Continuation target content",
y = "Average sequential log probabilities") +
scale_y_continuous(limits = c(-4.5, -4)) +
guides(fill = guide_legend(title = "Model name")) +
scale_x_discrete(labels = c('mc' = 'main', 'arc' = 'appositive')) +
scale_fill_brewer(palette = "Set2")  # colorblind-friendly palette
print(p)
RESULTS_DIR <- file.path("..", "data", "results", "mangen")
FIG_DIR <- file.path("..", "output", "figures")
file_names <- list.files(path = RESULTS_DIR, pattern = ".csv", full.names = FALSE)
file_names
RESULTS_DIR <- file.path("..", "data", "results", "mangen")
FIG_DIR <- file.path("..", "output", "figures")
ifelse(!dir.exists(file.path(FIG_DIR, "mangen")),
dir.create(file.path(FIG_DIR, "mangen"), recursive = TRUE), FALSE)
save_plot = TRUE
df_summary <- df_combined %>%
group_by(cont_target, cont_type, model_name) %>%
summarize(mean_avg_logprob = mean(avg_logprob, na.rm = TRUE), .groups = "drop")
p <- ggplot(df_combined, aes(x = cont_target, y = avg_logprob, fill = model_name)) +
geom_boxplot(position = "dodge") +
theme_minimal() +
facet_grid(~ cont_type) +
labs(title = "Sequential log probabilities",
x = "Continuation target content",
y = "Average sequential log probabilities") +
scale_y_continuous(limits = c(-4.5, -4)) +
guides(fill = guide_legend(title = "Model name")) +
scale_x_discrete(labels = c('mc' = 'main', 'arc' = 'appositive')) +
scale_fill_brewer(palette = "Set2")  # colorblind-friendly palette
print(p)
if (save_plot == TRUE) {
formats <- c("pdf", "svg")
lapply(formats, function(ext) {
ggsave(
plot = p,
width = 6,
height = 3,
dpi = 600,
filename = file.path(FIG_DIR, "mangen", paste0("average.", ext))
)
})
}
RESULTS_DIR <- file.path("..", "data", "results", "mangen")
FIG_DIR <- file.path("..", "analysis", "figures")
ifelse(!dir.exists(file.path(FIG_DIR, "mangen")),
dir.create(file.path(FIG_DIR, "mangen"), recursive = TRUE), FALSE)
df_summary <- df_combined %>%
group_by(cont_target, cont_type, model_name) %>%
summarize(mean_avg_logprob = mean(avg_logprob, na.rm = TRUE), .groups = "drop")
p <- ggplot(df_combined, aes(x = cont_target, y = avg_logprob, fill = model_name)) +
geom_boxplot(position = "dodge") +
theme_minimal() +
facet_grid(~ cont_type) +
labs(title = "Sequential log probabilities",
x = "Continuation target content",
y = "Average sequential log probabilities") +
scale_y_continuous(limits = c(-4.5, -4)) +
guides(fill = guide_legend(title = "Model name")) +
scale_x_discrete(labels = c('mc' = 'main', 'arc' = 'appositive')) +
scale_fill_brewer(palette = "Set2")  # colorblind-friendly palette
print(p)
if (save_plot == TRUE) {
formats <- c("pdf", "svg")
lapply(formats, function(ext) {
ggsave(
plot = p,
width = 6,
height = 3,
dpi = 600,
filename = file.path(FIG_DIR, "mangen", paste0("average.", ext))
)
})
}
